{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","onAdd","useState","newTitle","setNewTitle","newDescription","setNewDescription","newImgUrl","setNewImgUrl","newImdbUrl","setNewImdbUrl","newImdbId","setNewImdbId","hasTitleError","setTitleError","hasImgUrlError","setImgUrlError","hasImdbUrlError","setImdbUrlError","hasImdbIdError","setImdbIdError","hasValidImgUrl","setValidImgUrl","hasValidImdbUrl","setValidImdbUrl","requiredFields","regex","RegExp","onSubmit","event","preventDefault","classNames","type","name","placeholder","value","onBlur","target","onChange","test","disabled","App","moviesFromServer","setMovies","preparedMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b2f4f01.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [newTitle, setNewTitle] = useState('');\n  const [newDescription, setNewDescription] = useState('');\n  const [newImgUrl, setNewImgUrl] = useState('');\n  const [newImdbUrl, setNewImdbUrl] = useState('');\n  const [newImdbId, setNewImdbId] = useState('');\n  const [hasTitleError, setTitleError] = useState(false);\n  const [hasImgUrlError, setImgUrlError] = useState(false);\n  const [hasImdbUrlError, setImdbUrlError] = useState(false);\n  const [hasImdbIdError, setImdbIdError] = useState(false);\n  const [hasValidImgUrl, setValidImgUrl] = useState(true);\n  const [hasValidImdbUrl, setValidImdbUrl] = useState(true);\n  const requiredFields = !newTitle || !newImgUrl || !newImdbUrl\n    || !newImdbId || !hasValidImgUrl || !hasValidImdbUrl;\n  const clearFields = () => {\n    setNewTitle('');\n    setNewDescription('');\n    setNewImgUrl('');\n    setNewImdbUrl('');\n    setNewImdbId('');\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (requiredFields) {\n      return;\n    }\n\n    const currentMovie = {\n      title: newTitle,\n      description: newDescription,\n      imgUrl: newImgUrl,\n      imdbUrl: newImdbUrl,\n      imdbId: newImdbId,\n    };\n\n    onAdd(currentMovie);\n    clearFields();\n  };\n\n  // eslint-disable-next-line max-len\n  const regex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n  return (\n    <form\n      className=\"newMovie\"\n      onSubmit={onSubmit}\n    >\n      <input\n        className={\n          classNames(\n            'input is-primary',\n            { 'is-danger': hasTitleError },\n          )\n        }\n        data-cy=\"form-title\"\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Title\"\n        value={newTitle}\n        onBlur={(event) => {\n          setTitleError(!event.target.value);\n        }}\n        onChange={(event) => {\n          setNewTitle(event.target.value);\n          setTitleError(false);\n        }}\n      />\n\n      <div className=\"is-error\">\n        {hasTitleError && 'Please, enter a title'}\n      </div>\n\n      <input\n        className=\"input is-primary non-required\"\n        data-cy=\"form-description\"\n        type=\"text\"\n        name=\"description\"\n        placeholder=\"Description\"\n        value={newDescription}\n        onChange={(event) => {\n          setNewDescription(event.target.value);\n        }}\n      />\n\n      <input\n        className={\n          classNames(\n            'input is-link',\n            { 'is-danger': hasImgUrlError },\n            { 'is-danger': !hasValidImgUrl },\n          )\n        }\n        data-cy=\"form-imgUrl\"\n        type=\"text\"\n        name=\"imgUrl\"\n        placeholder=\"imgUrl\"\n        value={newImgUrl}\n        onBlur={(event) => {\n          setImgUrlError(!event.target.value);\n        }}\n        onChange={(event) => {\n          setNewImgUrl(event.target.value);\n          setValidImgUrl(regex.test(event.target.value));\n          setImgUrlError(false);\n        }}\n      />\n\n      <div className=\"is-error\">\n        {!hasValidImgUrl && <div>Invalid Url</div>}\n        {hasImgUrlError && <div>Please, enter a imgUrl</div>}\n      </div>\n\n      <input\n        className={\n          classNames(\n            'input is-link',\n            { 'is-danger': hasImdbUrlError },\n            { 'is-danger': !hasValidImdbUrl },\n          )\n        }\n        data-cy=\"form-imdbUrl\"\n        type=\"text\"\n        name=\"imdbUrl\"\n        placeholder=\"imdbUrl\"\n        value={newImdbUrl}\n        onBlur={(event) => {\n          setImdbUrlError(!event.target.value);\n        }}\n        onChange={(event) => {\n          setNewImdbUrl(event.target.value);\n          setValidImdbUrl(regex.test(event.target.value));\n          setImdbUrlError(false);\n        }}\n      />\n\n      <div className=\"is-error\">\n        {!hasValidImdbUrl && <div>Invalid Url</div>}\n        {hasImdbUrlError && <div>Please, enter a imdbUrl</div>}\n      </div>\n\n      <input\n        className={\n          classNames(\n            'input is-primary',\n            { 'is-danger': hasImdbIdError },\n          )\n        }\n        data-cy=\"form-imdbId\"\n        type=\"text\"\n        name=\"imdbId\"\n        placeholder=\"imdbId\"\n        value={newImdbId}\n        onBlur={(event) => {\n          setImdbIdError(!event.target.value);\n        }}\n        onChange={(event) => {\n          setNewImdbId(event.target.value);\n          setImdbIdError(false);\n        }}\n      />\n\n      <div className=\"is-error\">\n        {hasImdbIdError && 'Please, enter a imdbId'}\n      </div>\n\n      <button\n        className=\"button is-primary\"\n        data-cy=\"form-submit-button\"\n        type=\"submit\"\n        disabled={requiredFields}\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    const preparedMovies = [\n      ...movies,\n      movie,\n    ];\n\n    setMovies(preparedMovies);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}